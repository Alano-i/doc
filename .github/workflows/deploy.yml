name: Deploy VitePress site

on:
  push:
    branches: [main]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# 仅允许一项并发部署，跳过正在进行的运行和最新排队的运行之间的排队运行。
# 但是，不要取消正在进行的运行，因为我们希望完成这些生产部署。
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # build:
  #   name: 构建
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - name: Setup Node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #         cache: yarn
  #     - name: Setup Pages
  #       uses: actions/configure-pages@v3
  #     - name: Install dependencies
  #       run: yarn install
  #     - name: Build with VitePress
  #       run: yarn docs:build
  #     - name: Upload math result for job 2
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: build-dist
  #         path: docs/.vitepress/dist

  build-pages:
    name: 构建 GitHub Pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Install dependencies
        run: yarn install
      - name: Build with VitePress
        run: yarn docs:build-gh-page
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: docs/.vitepress/dist

  deploy-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build-pages
    runs-on: ubuntu-latest
    name: 部署到 GitHub Pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   name: 部署到自有服务
  #   env:
  #     FTP_SERVER: ${{ secrets.FTP_SERVER }}
  #     FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
  #     FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
  #     FTP_DIR: ${{ vars.FTP_DIR }}
  #   steps:
  #     - name: 获取构建产物
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: build-dist
  #     - name: 📂 部署到 FTP
  #       uses: SamKirkland/FTP-Deploy-Action@v4.3.4
  #       if: env.FTP_SERVER && env.FTP_USERNAME && env.FTP_PASSWORD
  #       with:
  #         server-dir: ${{ env.FTP_DIR }}
  #         server: ${{ env.FTP_SERVER }}
  #         username: ${{ env.FTP_USERNAME }}
  #         password: ${{ env.FTP_PASSWORD }}